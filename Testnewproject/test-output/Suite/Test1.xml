<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="WINCTRL-TQLRVFK" failures="0" tests="2" name="Test1" time="131.884" errors="0" timestamp="2022-05-25T11:50:19 IST">
  <testcase classname="maven.testclass" name="@BeforeTest launchbrowser" time="131.791">
    <failure type="org.openqa.selenium.TimeoutException" message="Socket timeout reading Marionette handshake data: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. (os error 10060)
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;WINCTRL-TQLRVFK&amp;apos;, ip: &amp;apos;192.168.188.11&amp;apos;, os.name: &amp;apos;Windows 8.1&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.3&amp;apos;, java.version: &amp;apos;17.0.1&amp;apos;
Driver info: driver.version: FirefoxDriver
remote stacktrace: ">
      <![CDATA[org.openqa.selenium.TimeoutException: Socket timeout reading Marionette handshake data: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. (os error 10060)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'WINCTRL-TQLRVFK', ip: '192.168.188.11', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.1'
Driver info: driver.version: FirefoxDriver
remote stacktrace: 
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:1002)
at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)
at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:147)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:125)
at baseClass.Broser.openFirefoxBrowser(Broser.java:20)
at maven.testclass.launchbrowser(testclass.java:39)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest launchbrowser -->
  <testcase classname="maven.testclass" name="@BeforeClass launchBrowser" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass launchBrowser -->
  <testcase classname="maven.testclass" name="@BeforeMethod loginApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod loginApplication -->
  <testcase classname="maven.testclass" name="@AfterClass closeapp" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass closeapp -->
  <testcase classname="maven.Annutation" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="maven.Annutation" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="maven.Annutation" name="@AfterTest afterTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="maven.testclass" name="testvalidateurl" time="0.0">
    <skipped/>
  </testcase> <!-- testvalidateurl -->
  <testcase classname="maven.Annutation" name="test" time="0.0">
    <skipped/>
  </testcase> <!-- test -->
</testsuite> <!-- Test1 -->
